---
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import "../styles/global.css";
import { ViewTransitions } from "astro:transitions";
import CircleButton from "../components/CircleButton.astro";
import ChatBox from "../components/ChatBox.jsx";
import SideBar from "../components/SideBar.astro";

const { pageTitle } = Astro.props;

let token = await fetch("http://localhost:8080/token", {
  method: "POST",
  headers: {
    accept: "application/json",
    "Content-Type": "application/x-www-form-urlencoded",
  },
  body: new URLSearchParams({
    grant_type: "",
    username: "admin",
    password: "secret",
    scope: "",
    client_id: "",
    client_secret: "",
  }),
})
  .then((response) => {
    if (!response.ok) {
      throw new Error("Network response was not ok");
    }
    return response.json();
  })
  .then((data) => {
    return data;
  })
  .catch((error) => {
    console.error("There was a problem with your fetch operation:", error);
  });
---

<html>
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{pageTitle}</title>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css"
    />
    <ViewTransitions />
  </head>

  <body>
    <SideBar />
    <div class="container">
      <Header />
      <div id="overlay">
        <ChatBox client:only token={token} />
      </div>
      <div class="page-content">
        <h1 transition:animate="slide">{pageTitle}</h1>
        <slot />
        <CircleButton />
        <Footer />
      </div>
    </div>

    <script>
      import "../scripts/menu.js";
    </script>
    <style>
      #overlay {
        position: fixed; /* Sit on top of the page content */
        display: none; /* Hidden by default */
        width: 100%; /* Full width (cover the whole page) */
        height: 100%; /* Full height (cover the whole page) */
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(
          0,
          0,
          0,
          0.5
        ); /* Black background with opacity */
        z-index: 2; /* Specify a stack order in case you're using a different order for other elements */
        cursor: pointer; /* Add a pointer on hover */
        justify-content: center;
        align-items: center;
        align-content: center;
      }
      :global(.dark) #sidebar ul li a {
        color: white;
      }
      .page-content {
        padding: 16px;
      }
      #close-btn {
        width: 24px;
        height: 24px;
        margin: 8px;
        position: relative;
        align-self: flex-end;
      }
      #close-btn i {
        color: #000;
      }
    </style>
  </body>
</html>
