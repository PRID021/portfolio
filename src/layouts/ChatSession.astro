---
import ChatBox from "../components/ChatBox.jsx";

const user_name = import.meta.env.SECRET_USERNAME;
const pass_word = import.meta.env.SECRET_PASSWORD;

let token = await fetch("http://localhost:8080/token", {
  method: "POST",
  headers: {
    accept: "application/json",
    "Content-Type": "application/x-www-form-urlencoded",
  },
  body: new URLSearchParams({
    grant_type: "",
    username: `${user_name}`,
    password: `${pass_word}`,
    scope: "",
    client_id: "",
    client_secret: "",
  }),
})
  .then((response) => {
    if (!response.ok) {
      throw new Error("Network response was not ok");
    }
    return response.json();
  })
  .then((data) => {
    return data;
  })
  .catch((error) => {
    console.error("There was a problem with your fetch operation:", error);
  });

let conversation = await fetch("http://localhost:8080/chat/conversation", {
  method: "POST",
  headers: {
    accept: "application/json",
    Authorization: `Bearer ${token.access_token}`,
  },
  body: JSON.stringify({}), // Add your request body here if needed
})
  .then((response) => {
    return response.json();
  })
  .catch((error) => {
    console.error("There was a problem with your fetch operation:", error);
  });
---

<div id="overlay">
  <ChatBox client:only token={token} conversation_id={conversation.id} />
</div>

<style>
  #overlay {
    position: fixed; /* Sit on top of the page content */
    display: none; /* Hidden by default */
    width: 100%; /* Full width (cover the whole page) */
    height: 100%; /* Full height (cover the whole page) */
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.5); /* Black background with opacity */
    z-index: 2; /* Specify a stack order in case you're using a different order for other elements */
    cursor: pointer; /* Add a pointer on hover */
    justify-content: center;
    align-items: center;
    align-content: center;
  }
</style>
